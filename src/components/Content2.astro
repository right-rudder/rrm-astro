---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const { data } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}"
);
if (!images[data.imagePath])
  throw new Error(
    `"${data.imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
---

<section class="relative isolate overflow-hidden bg-white py-24 sm:py-32">
  <div class="absolute inset-0 -z-10 overflow-hidden">
    <svg
      class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
      aria-hidden="true"
    >
      <defs>
        <pattern
          id="e813992c-7d03-4cc4-a2bd-151760b470a0"
          width="200"
          height="200"
          x="50%"
          y="-1"
          patternUnits="userSpaceOnUse"
        >
          <path d="M100 200V.5M.5 .5H200" fill="none"></path>
        </pattern>
      </defs>
      <svg x="50%" y="-1" class="overflow-visible fill-gray-50">
        <path
          d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
          stroke-width="0"></path>
      </svg>
      <rect
        width="100%"
        height="100%"
        stroke-width="0"
        fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"></rect>
    </svg>
  </div>
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl lg:mx-0 lg:max-w-none">
      <p
        class="text-base font-semibold leading-7 text-primary"
        set:html={data.upperHeading}
      />
      <h1
        class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl"
        set:html={data.heading}
      />
      <div
        class="mt-10 grid max-w-xl grid-cols-1 gap-8 text-base leading-7 text-gray-700 lg:max-w-none lg:grid-cols-2"
      >
        <div class="">
          {
            data.paragraphs
              .slice(0, 2)
              .map((paragraph) => <p class="mt-2">{paragraph}</p>)
          }
        </div>
        <div class="">
          {
            data.paragraphs
              .slice(2, 5)
              .map((paragraph) => <p class="mt-2">{paragraph}</p>)
          }
        </div>
      </div>
      {
        data.list && (
          <div class="mt-12 max-w-4xl mx-auto bg-gray-300/60 py-7 px-12 shadow-lg ring-1 ring-white rounded-lg">
            {data.list.heading && (
              <h4 class="text-2xl font-bold tracking-tight text-gray-900">
                {data.list.heading}
              </h4>
            )}
            <ul role="list" class="mt-4 space-y-8 text-gray-600">
              {data.list.items.map((item) => (
                <li class="flex gap-x-3">
                  <svg
                    class="mt-1 size-8 flex-none text-accent"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d={item.icon}
                      clip-rule="evenodd"
                    />
                  </svg>
                  <span class="leading-snug">
                    <strong class="font-bold text-gray-900 tracking-tight uppercase">
                      {item.title}
                    </strong>{" "}
                    {item.descriptions.map((dec) => (
                      <p class="mb-2" set:html={dec} />
                    ))}
                  </span>
                </li>
              ))}
            </ul>
          </div>
        )
      }
      {
        data.afterListParagraphs && (
          <div class="mt-16">
            {data.afterListParagraphs.map((paragraph) => (
              <p class="mt-2">{paragraph}</p>
            ))}
          </div>
        )
      }
      <div class="mt-10 w-full flex justify-center align-middle">
        <a href={data.button.link} class="btn-primary">{data.button.text}</a>
      </div>
    </div>
  </div>
  <div class="relative overflow-hidden pt-16 lg:pt-20">
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
      <Image
        src={images[data.imagePath]()}
        alt={data.imageAlt}
        class="mb-[-12%] w-full rounded-xl shadow-2xl ring-1 ring-gray-900/10"
        quality={100}
      />
      <div class="relative" aria-hidden="true">
        <div
          class="absolute -inset-x-20 bottom-0 bg-gradient-to-t from-white pt-[7%]"
        >
        </div>
      </div>
    </div>
  </div>
</section>
