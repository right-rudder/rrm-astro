---
import ImageComp from "./ImageComp.astro";

const { data } = Astro.props;
---

<section
  class="relative isolate overflow-hidden bg-white md:px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0"
>
  <div class="absolute inset-0 -z-10 overflow-hidden">
    <svg
      class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
      aria-hidden="true"
    >
      <defs>
        <pattern
          id="e813992c-7d03-4cc4-a2bd-151760b470a0"
          width="200"
          height="200"
          x="50%"
          y="-1"
          patternUnits="userSpaceOnUse"
        >
          <path d="M100 200V.5M.5 .5H200" fill="none"></path>
        </pattern>
      </defs>
      <svg x="50%" y="-1" class="overflow-visible fill-gray-50">
        <path
          d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
          stroke-width="0"></path>
      </svg>
      <rect
        width="100%"
        height="100%"
        stroke-width="0"
        fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"></rect>
    </svg>
  </div>
  <div class="mx-auto max-w-5xl flex justify-center items-center align-middle">
    <div class="text-center mx-6">
      <p class="text-base font-semibold leading-7 text-primary-700">
        {data.upperHeading}
      </p>
      <h1
        class="mt-0 mb-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl"
      >
        {data.heading}
      </h1>
      {
        data.descriptions.map((desc) => (
          <p class="mb-2 text-lg leading-8 text-gray-700" set:html={desc} />
        ))
      }
    </div>
  </div>
  <div class="flex justify-between items-center align-middle">
    <div class="flex flex-wrap w-full gap-y-6">
      {
        data.steps.map((step, index) => (
          <div
            class={`${index % 2 === 0 ? "bg-gray-50/30" : "bg-primary-200/30"} py-7 md:py-12 w-full flex ${step.invert ? "flex-row-reverse" : "flex-row"} justify-center flex-wrap`}
          >
            <div class="w-full lg:w-1/2 p-8 lg:p-12">
              <p class="text-6xl -mt-5 mb-3 text-primary-600/90 font-black">
                {index + 1}
              </p>
              <h4
                class="mb-3 font-bold text-3xl text-primary md:pr-8"
                set:html={step.title}
              />
              <h5
                class="mb-4 font-medium text-xl text-primary-dark-400 md:pr-8"
                set:html={step.subtitle}
              />
              {step.paragraphs.map((par) => (
                <p
                  class="mt-3 md:pr-8 text-base leading-6 text-gray-600"
                  set:html={par}
                />
              ))}
              {step.button && (
                <div class="mt-12">
                  <a href={step.button.link} class="btn-primary">
                    {step.button.name}
                  </a>
                </div>
              )}
            </div>
            <div class="w-full aspect-square lg:w-1/2 md:p-12 overflow-hidden">
              <ImageComp
                imagePath={step.imagePath}
                imageAlt={step.imageAlt}
                styles={`${step.imageCover ? "object-cover" : "object-contain"} w-full h-full rounded-lg`}
              />
            </div>
            <div />
          </div>
        ))
      }
    </div>
  </div>
</section>
