---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const { data } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}"
);
if (!images[data.imagePath])
  throw new Error(
    `"${data.imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
---

<div
  class="relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0"
>
  <div class="absolute inset-0 -z-10 overflow-hidden">
    <svg
      class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
      aria-hidden="true"
    >
      <defs>
        <pattern
          id="e813992c-7d03-4cc4-a2bd-151760b470a0"
          width="200"
          height="200"
          x="50%"
          y="-1"
          patternUnits="userSpaceOnUse"
        >
          <path d="M100 200V.5M.5 .5H200" fill="none"></path>
        </pattern>
      </defs>
      <svg x="50%" y="-1" class="overflow-visible fill-gray-50">
        <path
          d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
          stroke-width="0"></path>
      </svg>
      <rect
        width="100%"
        height="100%"
        stroke-width="0"
        fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"></rect>
    </svg>
  </div>
  <div
    class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10"
  >
    <div
      class="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8"
    >
      <div class="lg:pr-4">
        <div class="lg:max-w-lg">
          <p class="text-base font-semibold leading-7 text-primary-700">
            {data.upperHeading}
          </p>
          <h1
            class="mt-0 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl"
          >
            {data.heading}
          </h1>
          <p
            class="mt-6 text-xl leading-8 text-gray-700"
            set:html={data.description}
          />
        </div>
      </div>
    </div>
    <div
      class="-ml-12 -mt-12 p-12 lg:sticky lg:top-8 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden"
    >
      <Image
        src={images[data.imagePath]()}
        alt={data.imageAlt}
        class="w-[48rem] max-w-2xl max-h-screen rounded-md bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
        quality={100}
      />
    </div>
    <div
      class="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8"
    >
      <div class="lg:pr-4">
        <div class="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
          <div>
            {
              data.paragraphs.map((paragraph) => (
                <p class="mt-2" set:html={paragraph} />
              ))
            }
          </div>
          {
            data.list && (
              <div class="mt-12">
                <h4 class="text-2xl font-bold tracking-tight text-gray-900">
                  {data.list.heading}
                </h4>
                <ul role="list" class="mt-4 space-y-8 text-gray-600 max-w-md">
                  {data.list.items.map((item) => (
                    <li class="flex gap-x-3">
                      <svg
                        class="mt-1 size-8 flex-none text-accent"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d={item.icon}
                          clip-rule="evenodd"
                        />
                      </svg>
                      <span class="leading-snug">
                        <strong class="font-bold text-gray-900 tracking-tight uppercase">
                          {item.title}
                        </strong>{" "}
                        {item.descriptions.map((dec) => (
                          <p class="mb-2" set:html={dec} />
                        ))}
                      </span>
                    </li>
                  ))}
                </ul>
              </div>
            )
          }
          {
            data.afterListParagraphs && (
              <div class="mt-8">
                {data.afterListParagraphs.map((paragraph) => (
                  <p class="mt-2" set:html={paragraph} />
                ))}
              </div>
            )
          }
          {
            data.finalSection && (
              <>
                <h2 class="mt-16 text-2xl font-bold tracking-tight text-gray-900">
                  {data.finalSection.heading}
                </h2>
                <div class="mt-6">
                  {data.finalSection.descriptions.map((desc) => (
                    <p class="mt-2" set:html={desc} />
                  ))}
                </div>
              </>
            )
          }
        </div>
      </div>
    </div>
  </div>
</div>
