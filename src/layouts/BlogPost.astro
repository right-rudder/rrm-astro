---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BlogFeedRandom from "../components/BlogFeedRandom.astro";
import BaseLayout from "./BaseLayout.astro";
import { KEYWORDS } from "../consts";
import { slugify } from "../utils/slugify.js";

import AuthorCard from "../components/AuthorCard.astro";

type Props = CollectionEntry<"blog">["data"] & {
  enhancedKeywords?: string;
  breadcrumbSchema?: any;
};

const {
  title,
  author,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  keywords,
  enhancedKeywords,
  breadcrumbSchema,
} = Astro.props;

// Use enhanced keywords if provided, otherwise fallback to original logic
const finalKeywords =
  enhancedKeywords ||
  `${category}, ${tags.join(", ")}, flight school marketing, aviation marketing, pilot training marketing${keywords ? ", " + keywords : ""}`;
---

<BaseLayout
  siteTitle={title + " | Right Rudder Marketing Blog"}
  siteDescription={description +
    " Read more aviation marketing insights and flight school growth strategies on the Right Rudder Marketing blog."}
  keywords={finalKeywords}
  ogImage={heroImage}
  author={author}
  articleSchema={true}
  pubDate={pubDate}
  updatedDate={updatedDate}
  category={category}
  tags={tags}
>
  <!-- Enhanced SEO schema if provided -->
  {
    breadcrumbSchema && (
      <script
        type="application/ld+json"
        set:html={JSON.stringify(breadcrumbSchema)}
      />
    )
  }
  <div class="h-20 lg:h-28 w-full bg-primary/50 brightness-75"></div>

  <section class="flex flex-col justify-center pt-6 pb-20 overflow-hidden">
    <article class="mx-auto max-w-4xl">
      <div class="mb-12 lg:mb-0">
        {
          heroImage && (
            <img
              class="object-contain h-full w-full bg-white"
              src={heroImage}
              alt={title}
            />
          )
        }
      </div>
      <div class="mx-auto max-w-4xl bg-white prose font-sans py-12 px-5">
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="text-4xl md:text-5xl m-0 font-sans">{title}</h1>
          <p class="text-sm font-light">Written by:</p>
          <a href={`/flight-crew/${slugify(author)}`}>
            <p class="-mt-5 text-base font-medium">{author}</p>
          </a>
          <div class="md:flex hidden gap-2">
            <span
              class="bg-primary-600 text-white text-xs md:text-sm inline-flex items-center px-3 py-1 rounded-md"
            >
              {category}
            </span>
            {
              tags
                .slice(0, 3)
                .map((tag, index) => (
                  <span
                    class={`bg-teal-500 text-white text-center text-xs leading-3 md:leading-4 md:text-sm inline-flex items-center px-3 capitalize py-1 rounded-md`}
                  >
                    {tag}
                  </span>
                ))
            }
          </div>
          <hr />
        </div>
        <div
          class="flex justify-center lg:prose-img:aspect-auto prose-img:w-full prose-img:object-cover prose-img:object-top prose-img:shadow-lg"
        >
          <slot />
        </div>
      </div>
      <AuthorCard author={author} />
    </article>
  </section>

  <BlogFeedRandom />
</BaseLayout>
